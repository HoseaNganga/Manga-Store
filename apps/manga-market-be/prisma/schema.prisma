// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// schema.prisma

model Product {
  id            String      @id @default(uuid())
  title         String
  author        String
  genres        Genre[]
  description   String
  price         Float
  stock         Int
  coverUrl      String
  rating        Float?
  releaseDate   DateTime
  featured      Boolean     @default(false)
  trending      Boolean     @default(false)
  isNew         Boolean     @default(false)
  images        String[]
  orderItems    OrderItem[]
  stripePriceId String      @unique
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt
}

model Order {
  id          String           @id @default(uuid())
  userId      String
  items       OrderItem[]
  totalAmount Float
  status      OrderStatus      @default(PENDING)
  createdAt   DateTime         @default(now())
  updatedAt   DateTime         @updatedAt
  shipping    ShippingAddress? @relation("OrderToShippingAddress")
}

model OrderItem {
  id              String  @id @default(uuid())
  order           Order   @relation(fields: [orderId], references: [id])
  orderId         String
  product         Product @relation(fields: [productId], references: [id])
  productId       String
  quantity        Int
  priceAtPurchase Float
}

model ShippingAddress {
  id       String @id @default(uuid())
  order    Order? @relation("OrderToShippingAddress", fields: [orderId], references: [id])
  orderId  String @unique
  fullName String
  street   String
  city     String
  zip      String
  country  String
}

model Genre {
  id       String    @id @default(uuid())
  name     String    @unique
  products Product[]
}

enum OrderStatus {
  PENDING
  PAID
  SHIPPED
  DELIVERED
  CANCELLED
}

//Schema for heroUrls
model heroUrl {
  id  String @id @default(uuid())
  url String @unique
}
